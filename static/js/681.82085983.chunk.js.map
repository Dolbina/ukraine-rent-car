{"version":3,"file":"static/js/681.82085983.chunk.js","mappings":"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","sources":["components/CarCard/CarCard.styled.js","components/ButtonLearnMore/ButtonLearnMore.styled.js","components/ButtonLearnMore/ButtonLearnMore.js","components/CarCard/CarCard.js","components/CarGallary/CarGallary.js","components/CarGallary/CarGallary.styled.js","components/ErrorMessage.styled.js","components/Loader/LoaderWrap.styled.js","components/Loader/Loader.js","pages/Favorites.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { IoMdHeartEmpty, IoMdHeart } from 'react-icons/io';\n\nexport const CardWrap = styled.div`\n  height: 426px;\n  width: 274px;\n  \n`;\nexport const ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 268px;\n  overflow: hidden;\n  border-radius: 14px;\n  background-color: #f3f3f2;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 268px;\n  object-fit: cover;\n  \n`;\n\nexport const IconWrap = styled.div`\n position: absolute;\n            top: 14px;\n            right: 14px;\n            z-index: 9;\n`;\n\nexport const IconHeart = styled(IoMdHeart)`\n  width: 18px;\nheight: 18px;\n  color: #3470FF;\n`;\n\nexport const IconHeartEmpty = styled(IoMdHeartEmpty)`\n  width: 18px;\n  height: 18px;\n  color: #fff;\n`;\n\nexport const SubtitleCard = styled.h2`\n  color: #121417;\n  font-size: 16px;\n \n  font-weight: 500;\n  line-height: 1.5;\n  margin-top: 14px;\n`;\n\nexport const SubtitleCardBlue = styled.span`\n  color: #3470ff;\n`;\nexport const SubtitleWrap = styled.div`\n  display: flex;\n  width: 100%;\n\n  justify-content: space-between;\n`;\n\nexport const TextWrap = styled.div`\n  display: flex;\n  padding-right: 9px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n`;\n\n","import styled from \"styled-components\";\n\nexport const Btn = styled.button`\n  display: inline-block;\n  min-width: 274px;\n  height: 44px;\n   padding: 12px 99px;\ntext-align: center;\n\n  cursor: pointer;\n  border-radius: 12px;\n  background-color: #3470ff;\n  border: none;\n\n  margin-top: 28px;\n\n  color: #fff;\n  font-family: inherit;\n  font-size: 14px;\n\n  font-weight: 600;\n  line-height: 1.43;\n  \n   transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n\n`;\n\n","import { Btn } from './ButtonLearnMore.styled';\n\n\n\nexport const ButtonLearnMore = () => {\n  return (\n    <div>\n      <Btn type=\"button\">\n      Learn more </Btn>\n    </div>\n  );\n};\n","\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CardWrap,\n  Img,\n  ImageContainer,\n  IconWrap,\n  SubtitleCard,\n  SubtitleCardBlue,\n  SubtitleWrap,\n  TextWrap,\n  IconHeart,\n  IconHeartEmpty,\n} from './CarCard.styled';\n\nimport { ButtonLearnMore } from '../ButtonLearnMore/ButtonLearnMore';\n// import  {Modal}  from '../Modal/Modal';\n\nfunction toggleFavorite(carId) {\n  const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  const carIndex = favorites.indexOf(carId);\n  if (carIndex !== -1) {\n    \n    favorites.splice(carIndex, 1);\n  } else {\n   \n    favorites.push(carId);\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n}\n\n\nexport const CarCard = ({ car }) => {\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n\n \n const [isFavorites, setIsFavorites] = useState(\n   JSON.parse(localStorage.getItem('favorites'))?.includes(car.id) || false\n );\n\n const toggleFavorites = () => {\n   setIsFavorites(!isFavorites);\n   toggleFavorite(car.id);\n  };\n  \n//  const toggleModal = () => {\n//    setIsModalOpen(!isModalOpen);\n//   };\n  \n  return (\n    <CardWrap>\n      <ImageContainer>\n        <Img src={car.img} alt={car.make} />\n        <IconWrap>\n          {isFavorites ? (\n            <IconHeart onClick={toggleFavorites} />\n          ) : (\n            <IconHeartEmpty onClick={toggleFavorites} />\n          )}\n        </IconWrap>\n      </ImageContainer>\n\n      <TextWrap>\n        <SubtitleWrap>\n          <div>\n            <SubtitleCard>\n              {`${car.make} `}\n              <SubtitleCardBlue>{`${car.model}`}</SubtitleCardBlue>\n              {`, ${car.year}`}\n            </SubtitleCard>\n          </div>\n          <div>\n            <SubtitleCard>{`${car.rentalPrice}`}</SubtitleCard>\n          </div>\n        </SubtitleWrap>\n        <p>{`${car.address} | ${car.rentalCompany} `}</p>\n        <p>{`${car.type} | ${car.model} | ${car.id}`}</p>\n      </TextWrap>\n      <ButtonLearnMore>Learn more</ButtonLearnMore>\n      {/* <Modal\n        // isOpen={isModalOpen}\n        // onClose={toggleModal}\n        // onClose={onClose}\n        // shouldDisplay={shouldDisplayModal}\n      >\n        <h2>Аренда автомобіля</h2>\n      </Modal> */}\n    </CardWrap>\n  );\n};\n\nCarCard.propTypes = {\n  car: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    make: PropTypes.string.isRequired,\n    model: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    rentalPrice: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n    rentalCompany: PropTypes.string.isRequired,\n    accessories: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    type: PropTypes.string.isRequired,\n    functionalities: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  }).isRequired,\n};\n","import { CarGallaryWrap} from './CarGallary.styled';\nimport { CarCard } from '../CarCard/CarCard';\nimport PropTypes from 'prop-types';\n\nexport const CarGallary = ({ cars }) => {\n  return (\n    <div>\n      <CarGallaryWrap>\n        {cars?.map(car => (\n          <li key={car.id}>\n            <CarCard car={car} />\n          </li>\n        ))}\n      </CarGallaryWrap>\n    </div>\n  );\n};\n\n\n\nCarGallary.propTypes = {\n  cars: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    make: PropTypes.string.isRequired,\n    model: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    fuelConsumption: PropTypes.string.isRequired,\n    engineSize: PropTypes.string.isRequired,\n    accessories: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    functionalities: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    rentalPrice: PropTypes.string.isRequired,\n    rentalCompany: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n    rentalConditions: PropTypes.string.isRequired,\n    mileage: PropTypes.number.isRequired,\n})).isRequired,\n};","import styled from 'styled-components';\n\nexport const CarGallaryWrap = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(\n    4,\n    minmax(274px, 1fr)\n  ); \n  grid-auto-rows: 426px; \n  grid-gap: 29px; \n  max-width: 1440px; \n  margin: 0 auto; \n  list-style: none;\n  padding: 0;\n  grid-row-gap: 50px;\n`;\n\nexport const TitleHidden = styled.h1`\n \n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    margin: -1px;\n  \n`;\n\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  margin: 0 auto;\n  font-size: 24px;\n\n`;\n","import styled from \"styled-components\";\n\nexport const LoaderWrap = styled.div`\npadding-top: 0px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`","import { BallTriangle } from 'react-loader-spinner';\nimport { LoaderWrap } from './LoaderWrap.styled';\n\nexport const Loader=()=>{\n    return (\n      <LoaderWrap>\n        <BallTriangle\n          height={100}\n          width={100}\n          radius={5}\n          color=\"red\"\n          ariaLabel=\"ball-triangle-loading\"\n          wrapperClass={{}}\n          wrapperStyle=\"\"\n          visible={true}\n        />\n      </LoaderWrap>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport { fetchCars } from '../services/api';\nimport { ErrorMessage } from '../components/ErrorMessage.styled';\nimport { CarGallary } from 'components/CarGallary/CarGallary';\n\nconst Favorites = () => {\n  const [favoriteCarsId, setFavoriteCarsId] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCars3 = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const results = await fetchCars();\n        setCars(results);\n      } catch (error) {\n        setError('Error, try reloading the page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const savedFavoriteCarsId =\n      JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavoriteCarsId(savedFavoriteCarsId);\n\n    fetchCars3();\n  }, []);\n\n  useEffect(() => {\n    const filtered = cars.filter(car => favoriteCarsId.includes(car.id));\n    setFilteredCars(filtered);\n  }, [favoriteCarsId, cars]);\n\n  return (\n    <main>\n      {!isLoading && error && <ErrorMessage>{error}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {!error && (\n        <>\n          {filteredCars.length > 0 ? (\n            <CarGallary cars={filteredCars} />\n          ) : (\n            <p>Your list of favorite cars is empty</p>\n          )}\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Favorites;\n","import axios from \"axios\";\nconst API_KEY = '48fb147532276641d9f1a55b83b3113d';\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n \n  return data;\n  \n}\n\nexport const fetchCars = async () => {\n  const { data } = await axios.get(\n    `https://647798c89233e82dd53be788.mockapi.io/adverts`\n  );\n  return data;\n}\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n \n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMoviesCast = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n  \n};\n\nexport const fetchMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\nconsole.log(data);\n  return data;\n  \n};\n\n"],"names":["CardWrap","styled","ImageContainer","Img","IconWrap","IconHeart","IoMdHeart","IconHeartEmpty","IoMdHeartEmpty","SubtitleCard","SubtitleCardBlue","SubtitleWrap","TextWrap","Btn","ButtonLearnMore","type","CarCard","car","useState","JSON","parse","localStorage","getItem","includes","id","isFavorites","setIsFavorites","toggleFavorites","carId","favorites","carIndex","indexOf","splice","push","setItem","stringify","toggleFavorite","src","img","alt","make","onClick","model","year","rentalPrice","address","rentalCompany","CarGallary","cars","map","CarGallaryWrap","TitleHidden","ErrorMessage","LoaderWrap","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","favoriteCarsId","setFavoriteCarsId","filteredCars","setFilteredCars","setCars","isLoading","setIsLoading","error","setError","useEffect","fetchCars3","fetchCars","results","savedFavoriteCarsId","filtered","filter","length","API_KEY","axios","data","fetchMoviesById","movieId","fetchMoviesCast","fetchMoviesReviews","console","log"],"sourceRoot":""}