{"version":3,"file":"static/js/910.99971186.chunk.js","mappings":"gOAkDA,UA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,gHAEEC,EAAAA,EAAAA,IAAgBP,GAFlB,gBAEbQ,EAFa,EAEbA,KACRJ,EAAcI,GACdC,QAAQC,IAAIF,GAJS,gDAMrBC,QAAQC,IAAR,MANqB,yDAAH,qDAStBJ,GACD,GAAE,CAACN,KAEF,6BACGG,EAAWQ,OAAS,GACnB,wBACGR,EAAWS,KAAI,SAAAC,GAAK,OACnB,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,eAGL,gBACEF,IAAG,oDACHC,IAAG,UAAKH,EAAMI,KAAX,eAGP,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eAbdL,EAAMM,GADI,OAmBvB,0DAIP,C,mMC/CKC,EAAU,mCAEHC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,kEACsCF,IAF5B,uBACzBG,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qDASnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHH,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCACgEK,EADhE,gCADG,uBAClBF,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZG,EAAe,mCAAG,WAAM1B,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,oBACoCoB,EADpC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfhB,EAAe,mCAAG,WAAMP,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,4BAC4CoB,EAD5C,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,sDASfI,EAAkB,mCAAG,WAAM3B,GAAN,yFACTsB,EAAAA,EAAAA,IAAA,6CACiBtB,EADjB,4BAC4CoB,EAD5C,2BADS,uBACxBG,EADwB,EACxBA,KAGVd,QAAQC,IAAIa,GAJsB,kBAKzBA,GALyB,2CAAH,qD","sources":["components/Cast.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nimport { fetchMoviesCast } from '../services/api';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [moviesCast, setMoviesCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMoviesCast2 = async () => {\n      try {\n        const { cast } = await fetchMoviesCast(movieId);\n        setMoviesCast(cast);\n        console.log(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMoviesCast2();\n  }, [movieId]);\n  return (\n    <section>\n      {moviesCast.length > 0 ? (\n        <ul>\n          {moviesCast.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available</p>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\nconst API_KEY = '48fb147532276641d9f1a55b83b3113d';\n\nexport const fetchMoviesTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n \n  return data;\n  \n}\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n \n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMoviesCast = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n  \n};\n\nexport const fetchMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\nconsole.log(data);\n  return data;\n  \n};\n"],"names":["movieId","useParams","useState","moviesCast","setMoviesCast","useEffect","fetchMoviesCast2","fetchMoviesCast","cast","console","log","length","map","actor","profile_path","src","alt","name","character","id","API_KEY","fetchMoviesTrending","axios","data","searchMovies","query","fetchMoviesById","fetchMoviesReviews"],"sourceRoot":""}