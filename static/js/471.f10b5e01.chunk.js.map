{"version":3,"file":"static/js/471.f10b5e01.chunk.js","mappings":"oUAGaA,EAAUC,EAAAA,GAAAA,MAAH,2PAgBPC,EAAiBD,EAAAA,GAAAA,IAAH,2BAIdE,EAAiBF,EAAAA,GAAAA,GAAH,4GAOdG,EAAcH,EAAAA,GAAAA,EAAH,yFAOXI,EAAeJ,EAAAA,GAAAA,OAAH,2IASZK,EAAcL,EAAAA,GAAAA,OAAH,6G,kBChBxB,EAnByB,SAAC,GAAyB,IAAvBM,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClC,OACE,UAACR,EAAD,CAASS,KAAMF,EAAf,WACE,SAACD,EAAD,CAAaI,QAASF,EAAtB,UACE,SAAC,MAAD,CAAgBG,KAAK,KAAKC,KAAK,eAEjC,UAACV,EAAD,YACE,SAACC,EAAD,4BACA,SAACC,EAAD,CAAaS,KAAK,IAAlB,4BACA,SAAC,KAAD,WACE,cAAGA,KAAK,oBAAR,+BAOT,EC2CD,EA7DkB,WAChB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACE,GAAsCV,EAAAA,EAAAA,WAAS,GAA/C,eAAOW,EAAP,KAAoBC,EAApB,KAoCF,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAa,GACbE,EAAS,MAHM,UAIOK,EAAAA,EAAAA,MAJP,OAITC,EAJS,OAKfV,EAAQU,GALO,gDAOfN,EAAS,iCAPM,yBASfF,GAAa,GATE,4EAAH,qDAaVS,EACJC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACnDnB,EAAkBe,GAElBH,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACR,IAAMS,EAAWjB,EAAKkB,QAAO,SAAAC,GAAG,OAAIvB,EAAewB,SAASD,EAAIE,GAAhC,IAChCtB,EAAgBkB,EACjB,GAAE,CAACrB,EAAgBI,KAGlB,4BACGM,IAAe,SAAC,EAAD,CAAkBlB,OAAQkB,EAAajB,QAhCpC,WACnBkB,GAAe,EAChB,KA+BC,SAACrB,EAAD,CAAcK,QArCM,WACpBgB,GAAgBD,EACjB,EAmCC,UAAsC,SAAC,MAAD,CAAiBd,KAAK,KAAKC,KAAK,eACpES,GAAaE,IAAS,SAAC,IAAD,UAAeA,IACtCF,IAAa,SAACoB,EAAA,EAAD,KACZlB,IACA,8BACGN,EAAayB,OAAS,GACrB,SAACC,EAAA,EAAD,CAAYxB,KAAMF,KAElB,SAAC,IAAD,sDAMX,C","sources":["components/SideBar/SideBar.styled.js","components/SideBar/SideBar.js","pages/Favorites.js"],"sourcesContent":["\nimport styled from 'styled-components';\n\nexport const Sidebar = styled.aside`\n  width: 225px;\n  height: 100vh; \n  background-color: #f1f1f1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 6;\n  padding: 24px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\n\n\nexport const SidebarContent = styled.div`\n \n`;\n\nexport const SidebarHeading = styled.h2`\n  font-size: 18px;\n  font-weight: 600;\n  color: #121417;\n  margin-bottom: 10px;\n`;\n\nexport const SidebarLink = styled.a`\n  display: block;\n  font-size: 16px;\n  margin-bottom: 5px;\n \n`;\n\nexport const BurgerButton = styled.button`\n  position: fixed;\n  top: 20px;\n  left: 80px;\n  z-index: 5;\n  border: none;\n  background-color: transparent;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right:16px;\n  z-index: 8;\n  border: none; \n`;\n\n\n","import { AiOutlineClose } from 'react-icons/ai';\nimport {\n  CloseButton,\n  Sidebar,\n  SidebarContent,\n  SidebarHeading,\n  SidebarLink,\n \n} from '../SideBar/SideBar.styled';\nimport { Rental } from 'components/ModalCar/ModalCar.styled';\n\nconst SidebarComponent = ({ isOpen, onClose }) => {\n  return (\n    <Sidebar open={isOpen}>\n      <CloseButton onClick={onClose}>\n        <AiOutlineClose size=\"18\" fill=\"#121417\" />\n      </CloseButton>\n      <SidebarContent>\n        <SidebarHeading>Car for rent</SidebarHeading>\n        <SidebarLink href=\"#\">Order History</SidebarLink>\n        <Rental>\n          <a href=\"tel:+380730000000\">Rental car</a>\n        </Rental>\n\n        \n      </SidebarContent>\n    </Sidebar>\n  );\n};\n\nexport default SidebarComponent;\n","import { useEffect, useState } from 'react';\nimport { RxHamburgerMenu } from 'react-icons/rx';\nimport { Loader } from '../components/Loader/Loader';\nimport { fetchCars } from '../services/api';\nimport { ErrorMessage } from '../components/ErrorMessage.styled';\nimport { CarGallary } from 'components/CarGallary/CarGallary';\nimport SidebarComponent from 'components/SideBar/SideBar';\nimport { BurgerButton } from '../components/SideBar/SideBar.styled';\n\n\nconst Favorites = () => {\n  const [favoriteCarsId, setFavoriteCarsId] = useState([]);\n  const [filteredCars, setFilteredCars] = useState([]);\n  const [cars, setCars] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    const toggleSidebar = () => {\n      setSidebarOpen(!sidebarOpen);\n    };\n\n    const closeSidebar = () => {\n      setSidebarOpen(false);\n    };\n\n  useEffect(() => {\n    const fetchCars3 = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const results = await fetchCars();\n        setCars(results);\n      } catch (error) {\n        setError('Error, try reloading the page');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const savedFavoriteCarsId =\n      JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavoriteCarsId(savedFavoriteCarsId);\n\n    fetchCars3();\n  }, []);\n\n  useEffect(() => {\n    const filtered = cars.filter(car => favoriteCarsId.includes(car.id));\n    setFilteredCars(filtered);\n  }, [favoriteCarsId, cars]);\n\n  return (\n    <main>\n      {sidebarOpen && <SidebarComponent isOpen={sidebarOpen} onClose={closeSidebar} />}\n      <BurgerButton onClick={toggleSidebar}><RxHamburgerMenu size=\"24\" fill=\"#121417\"/></BurgerButton>\n      {!isLoading && error && <ErrorMessage>{error}</ErrorMessage>}\n      {isLoading && <Loader />}\n      {!error && (\n        <>\n          {filteredCars.length > 0 ? (\n            <CarGallary cars={filteredCars} />\n          ) : (\n            <ErrorMessage>Your list of favorite cars is empty</ErrorMessage>\n          )}\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Favorites;\n"],"names":["Sidebar","styled","SidebarContent","SidebarHeading","SidebarLink","BurgerButton","CloseButton","isOpen","onClose","open","onClick","size","fill","href","useState","favoriteCarsId","setFavoriteCarsId","filteredCars","setFilteredCars","cars","setCars","isLoading","setIsLoading","error","setError","sidebarOpen","setSidebarOpen","useEffect","fetchCars3","fetchCars","results","savedFavoriteCarsId","JSON","parse","localStorage","getItem","filtered","filter","car","includes","id","Loader","length","CarGallary"],"sourceRoot":""}